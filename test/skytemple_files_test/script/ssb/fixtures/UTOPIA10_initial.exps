macro WaitUnlockLives($lock, $actor)
{
    WaitLockLives($lock, $actor);
    Unlock($lock);
}

macro WaitUnlockObject($lock, $object)
{
    WaitLockObject($lock, $object);
    Unlock($lock);
}

macro WaitUnlockPerformer($lock, $performer)
{
    WaitLockObject($lock, $performer);
    Unlock($lock);
}

macro WaitUnlockMain()
{
    WaitLockSupervision(20);
    Unlock(20);
}

macro shake($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        Slide2PositionOffset(1, -1, 0);
        Wait(2);
        Slide2PositionOffset(1, 1, 0);
        Wait(2);
    }
}

macro spotlight($x, $y, $size, $speed)
{
    supervision_SpecialActing(27, 0, 0);
    supervision_SpecialActing(28, $x, $y);
    supervision_SpecialActing(29, $size, 0);
    supervision_SpecialActing(30, $speed, 0);
}

macro camera_shake($time, $arg0, $arg1, $arg3)
{
    camera_SetEffect($arg0, $arg1, $arg3);
    Wait($time);
    camera_SetEffect(0, 0, 0);
}

macro amber_hop_once()
{
    SetAnimation(5);
    Wait(23);
    SetAnimation(2);
}

macro amber_hop_se($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        se_PlayVolume(257, 128);
        Wait(23);
    }
}

macro nod()
{
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
}

macro dungeon_talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro dungeon_talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro echo_se($se_id)
{
    Wait(60);
    se_PlayVolume($se_id, 192);
    WaitSe($se_id);
    Wait(60);
    se_PlayVolume($se_id, 128);
    WaitSe($se_id);
    Wait(90);
}


// More general-purpose ones


macro talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_KeyWait();
}

macro monologue($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_KeyWait();
}

macro talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro monologue_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro talk_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_CloseEnforce();
}

macro monologue_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_CloseEnforce();
}


macro with_sweat_medium_wait($actor)
{
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_medium($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
}

macro tr_sweat_medium_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    WaitEffect();
}

macro tr_sweat_medium()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
}

macro with_sweat_small_wait($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_small($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
}

macro tr_sweat_small_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    WaitEffect();
}

macro tr_sweat_small()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
}

macro with_sweat_single_wait($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_single($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
}

macro tr_sweat_single_wait()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
    WaitEffect();
}

macro tr_sweat_single()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
}

macro with_shock_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_shock_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_shock()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_shock_m_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock_m($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_shock_m_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_shock_m()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_vshock_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_vshock_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_vshock()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_vshock_m_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock_m($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_vshock_m_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_vshock_m()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_question($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
}

macro with_question_wait($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
    with(actor $actor)
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro tr_question()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
}

macro tr_question_wait()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
    WaitEffect();
}
    



def 0
{
    debug_Print("In which the Happiness Machine presents itself.");
    CallCommon(CORO_SUBSCREEN_INIT);
    screen2_FadeIn(1, 0);
    CallCommon(CORO_TITLE_TEST);
    CallCommon(CORO_DEBUG_FLAG_SETTING_FUTURE);
    back_SetGround(15);
    supervision_Acting(0);
    WaitLockLives(0, 2);
    WaitLockLives(0, 0);
    message_Mail("Among the straggling few mysteries about this\nworld, the [CS:P]Hollow[CR] stood as a stark reminder\nthat no one had all the answers to life.[K]\n\nIts inception was unknown.[K] Its voice? Unknown.[K][U:0]\nIts purpose?[W:60] To [hero],[W:20] simply a tool to\nlocate any remaining PokÃ©mon.[W:90]\nAnd that was all she should know.");
    message_Close();
    WaitLockPerformer(18, 0);
    Unlock(18);
    CallCommon(CORO_DEBUG_FLAG_SETTING_PUPURIN);
    WaitLockPerformer(19, 0);
    Wait(60);
    WaitLockLives(2, 0);
    screen_FadeChange(0, 60, 256, 92);
    CallCommon(CORO_DEBUG_FLAG_SETTING_PUPURIN);
    message_Explanation("[VS:1:2][CN]Welcome back...[K]\n[CN]It has been quite some time...[VS:1:3][K]\n[CN][U:1][hero][W:20] and [U:2][partner].[VR]");
    message_KeyWait();
    ~WaitUnlockLives(4, 0);
    message_Explanation("[VS:1:2][CN]I do hope you have fared well recently...[K]\n[CN]As much as I hope that you know your duty.[VR]");
    screen_FadeChange(0, 60, 92, 256);
    ~WaitUnlockLives(3, 2);
    Lock(20);
    WaitLockLives(8, 0);
    ~talk(2, FACE_NORMAL, FACE_POS_BOTTOM_R_FACEINW, 0, 0,
        "[VS:1:2]Ah...[W:20][VR]yes,[W:10] I would never[U:8] abandon my duty.");
    ~monologue_close(2, FACE_SAD, FACE_POS_BOTTOM_R_FACEINW, 0, 0,
        "(What else would I be good for, anyway...?)");
    screen_FadeChange(0, 20, 256, 92);
    message_Explanation("[CN]Careful with where your mind roams.[K]\n[CN]Your usefulness does not hinge on one skill.[K]\n[CN]And besides,[W:20][U:19][VS:1:2] I appreciate your hard work![VR]");
    screen_FadeChange(0, 60, 92, 256);
    ~WaitUnlockLives(7, 2);
    Lock(20);
    ~talk(2, FACE_SIGH, FACE_POS_BOTTOM_R_FACEINW, 0, 0,
        "T-[W:5]thank you,[W:20] but I'd appreciate it if the\nmind-reading was toned down to zero.[K]\nLet's just get this over with.");
    message_Talk("Like you've mentioned...[K][FACE:1][VS:1:2]\nI've got a duty to do...[VR]");
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
    Wait(80);
    WaitLockPerformer(19, 0);
    Unlock(19);
    message_Explanation("[VS:1:4][CN]Indeed you have.[VR]");
    message_Explanation("[VS:1:4][CN]Please sit in the center of my eye.[VR]");
    Wait(40);
    WaitLockLives(9, 0);
    ~WaitUnlockLives(9, 2);
    WaitLockPerformer(19, 0);
    end;
}

def 1 for_actor(2)
{
    ResetOutputAttribute(256);
    camera_SetMyself();
    SetPositionOffset(0, 200);
    SetAnimation(2);
    Lock(0);
    screen_FadeIn(0, 60);
    Move2PositionOffset(32952, 0, -200);
    Lock(1);
    SetOutputAttribute(16);
    Lock(3);
    Turn2Direction(4, 10, DIR_LEFT);
    Wait(30);
    ~WaitUnlockLives(6, 0);
    Lock(5);
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
    Wait(60);
    Turn2Direction(4, 10, DIR_UP);
    Wait(10);
    ~shake(3);
    Wait(5);
    Move2PositionOffset(32896, 0, -32);
    WaitLockPerformer(19, 0);
    Unlock(19);
    Move2PositionOffset(32896, 0, -20);
    ResetOutputAttribute(16);
    ~WaitUnlockMain();
    CallCommon(CORO_HEAD_SHAKE_FUNC);
    Wait(30);
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
    Lock(7);
    ~tr_sweat_single_wait();
    ~WaitUnlockMain();
    ~shake(4);
    Lock(9);
    SetAnimation(514);
    Wait(1);
    Move2PositionOffset(32832, 0, -24);
    Wait(66);
    WaitLockPerformer(18, 0);
    Unlock(18);
    SetAnimation(32);
    WaitAnimation();
    SetAnimation(2);
    Wait(30);
    ~shake(2);
    hold;
}

def 2 for_actor(0)
{
    ResetOutputAttribute(256);
    SetPositionOffset(0, 200);
    SetAnimation(2);
    Lock(0);
    Move2PositionOffset(32972, 0, -200);
    Lock(2);
    SetOutputAttribute(16);
    Lock(4);
    Move2PositionOffset(1, -36, -36);
    SetDirection(DIR_UP);
    Wait(30);
    Turn2Direction(4, 10, DIR_RIGHT);
    Wait(60);
    Turn2Direction(6, 10, DIR_UP);
    Lock(6);
    Turn2Direction(2, 10, DIR_RIGHT);
    ~amber_hop_once();
    Turn2Direction(4, 10, DIR_UP);
    Wait(10);
    Slide2PositionOffset(4, 0, -9);
    Slide2PositionOffset(2, 0, 9);
    Slide2PositionOffset(4, 0, -9);
    Slide2PositionOffset(2, 0, 9);
    Wait(20);
    Turn2Direction(2, 10, DIR_RIGHT);
    ResetOutputAttribute(16);
    ~WaitUnlockLives(5, 2);
    CallCommon(CORO_JUMP_HAPPY_FUNC);
    Wait(20);
    Turn2Direction(8, 10, DIR_UP);
    Lock(8);
    SetAnimation(1028);
    Move2PositionOffset(3, 0, -40);
    CallCommon(CORO_JUMP_ANGRY_FUNC);
    SetAnimation(770);
    Lock(9);
    Wait(20);
    PursueTurnLives(90, 8, 2, 10);
    hold;
}

def 3 for_performer(0)
{
    Lock(18);
    Wait(90);
    bgm_PlayFadeIn(BGM_TIME_GEAR_REMIX, 90, 256);
    camera_Move2MyPosition(32832);
    WaitMoveCamera();
    camera_SetMyself();
    Lock(19);
    Move2PositionOffset(32896, 0, -20);
    Lock(19);
    se_Play(5137);
    with(performer 3)
    {
        SetOutputAttribute(16);
    }
    with(performer 3)
    {
        SetEffect(EFFECT_CONFETTI, 3);
    }
    Wait(30);
    se_FadeOut(5137, 40);
    Lock(19);
    se_Play(10764);
    bgm_ChangeVolume(20, 128);
    screen_FadeChange(1, 20, 256, 92);
    Wait(10);
    bgm_ChangeVolume(10, 256);
    screen_FadeChange(1, 10, 92, 256);
    Wait(5);
    bgm_FadeOut(5);
    screen_FadeChange(1, 5, 256, 92);
    Lock(18);
    Move2PositionOffset(32945, 0, -28);
    Lock(19);
    hold;
}
