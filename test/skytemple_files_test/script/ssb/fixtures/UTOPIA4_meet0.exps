macro WaitUnlockLives($lock, $actor)
{
    WaitLockLives($lock, $actor);
    Unlock($lock);
}

macro WaitUnlockObject($lock, $object)
{
    WaitLockObject($lock, $object);
    Unlock($lock);
}

macro WaitUnlockPerformer($lock, $performer)
{
    WaitLockObject($lock, $performer);
    Unlock($lock);
}

macro WaitUnlockMain()
{
    WaitLockSupervision(20);
    Unlock(20);
}

macro shake($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        Slide2PositionOffset(1, -1, 0);
        Wait(2);
        Slide2PositionOffset(1, 1, 0);
        Wait(2);
    }
}

macro spotlight($x, $y, $size, $speed)
{
    supervision_SpecialActing(27, 0, 0);
    supervision_SpecialActing(28, $x, $y);
    supervision_SpecialActing(29, $size, 0);
    supervision_SpecialActing(30, $speed, 0);
}

macro camera_shake($time, $arg0, $arg1, $arg3)
{
    camera_SetEffect($arg0, $arg1, $arg3);
    Wait($time);
    camera_SetEffect(0, 0, 0);
}

macro amber_hop_once()
{
    SetAnimation(5);
    Wait(23);
    SetAnimation(2);
}

macro amber_hop_se($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        se_PlayVolume(257, 128);
        Wait(23);
    }
}

macro nod()
{
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
}

macro dungeon_talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro dungeon_talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro echo_se($se_id)
{
    Wait(60);
    se_PlayVolume($se_id, 192);
    WaitSe($se_id);
    Wait(60);
    se_PlayVolume($se_id, 128);
    WaitSe($se_id);
    Wait(90);
}


// More general-purpose ones


macro talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_KeyWait();
}

macro monologue($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_KeyWait();
}

macro talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro monologue_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro talk_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_CloseEnforce();
}

macro monologue_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_CloseEnforce();
}


macro with_sweat_medium_wait($actor)
{
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_medium($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
}

macro tr_sweat_medium_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    WaitEffect();
}

macro tr_sweat_medium()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
}

macro with_sweat_small_wait($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_small($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
}

macro tr_sweat_small_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    WaitEffect();
}

macro tr_sweat_small()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
}

macro with_sweat_single_wait($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_single($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
}

macro tr_sweat_single_wait()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
    WaitEffect();
}

macro tr_sweat_single()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
}

macro with_shock_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_shock_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_shock()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_shock_m_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock_m($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_shock_m_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_shock_m()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_vshock_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_vshock_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_vshock()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_vshock_m_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock_m($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_vshock_m_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_vshock_m()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_question($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
}

macro with_question_wait($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
    with(actor $actor)
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro tr_question()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
}

macro tr_question_wait()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
    WaitEffect();
}
    




def 0
{   
    debug_Print("In which Amber's come to make an important announcement (Shadow the Hedgehog is a b--)");
    CallCommon(CORO_FADE_OUT_ALL_BEFORE);
    back_SetGround(103);
    supervision_Acting(2);
    screen_FadeChange(1, 0, 0, 64);
    CallCommon(CORO_TITLE_TEST);
    CallCommon(CORO_DEBUG_FLAG_SETTING_FUTURE);
    CallCommon(CORO_SUBSCREEN_INIT);
    screen2_FadeIn(1, 0);
    WaitLockPerformer(19, 0);
    message_EmptyActor(); 
    message_Talk("[TS:16139][STS][CN][BS]Debug Log[BR][W:90][HR][BAR][STE][W:90] \n[HR][STS]Record[STE][W:120][TS:16131] [STS][CS:B](int too big to convert)[STE][W:90]\n\n[TS:16136][VS:7:1][CS:H]in [BS]write[BR](self=<skytemple_files.script.ssb.writer\n.SsbWriter object>\nin [BS]write_uintle[BR](self=<skytemple_files.script.ssb\n.writer.SsbWriter object>, data=bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00...x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'), to_write=88404700839397894644528430)[VR]");
    message_CloseEnforce();
    sound_Stop();
    se_Play(16137);
    WaitSe(16137);
    Wait(20);
    message_Talk("[TS:16139][STS][CN][BS]Debug Log[BR][HR][BAR] \n[HR][STS]Record ‰[STE] [W:90][HR] [HR][STS]Year ‰[STE][W:90][K]\n\n[VS:1:4]Topics:[W:20]\n[CLUM_SET:42][TS:16129]* Entropy[W:20]\n[CLUM_SET:42]* Futility[W:20]\n[CLUM_SET:42][TS:16129]* Inevitability[VR]");
    message_Mail("[TR]Why am I forced to waste precious resources\non absolute trivial tasks such as these?[K]\nI am at the end of my rope as it is trying to\nmaintain the eternal bliss of the\nwalking, talking playthings.[K]\nBut I digress...");
    message_Mail("I have reason to believe that--[W:10]finally--[W:10]\nprogress will be made concerning the\nremaining three Pokémon.[K][U:19]\n\n[partner] has recently begun rallying up the\nresident [CS:K]Dolls[CR] to try and exchange info.[K]\nGiven that only a species is what I need\nfor a simple search, I am certain that\nit is only a matter of time before\nsomeone reveals a crucial clue.");
    message_KeyWait();
    WaitLockLives(2, 2);
    message_Mail("Though crafty the last few Pokémon may be\nin hiding, [hero] has proven herself\ncapable of anything she puts her mind to.[K][U:2]\nWhich, currently, is not very much...");
    message_KeyWait();
    WaitLockPerformer(20, 0);
    WaitLockPerformer(13, 1);
    message_Mail("But I believe in [partner]'s ability to cheer\nher up as much as I do in [hero]'s\nimpressive napping capabilities.[K][U:20][VS:1:2]\nMy work will soon be over.[K][U:13][VS:2:5]\n\nEveryone will soon be happy forever.[VR]");
    message_CloseEnforce();
    WaitLockPerformer(0, 1);
    CallCommon(CORO_DEBUG_FLAG_SETTING_PUPURIN);
    CallCommon(CORO_BUBBLE_TEST);
    Wait(90);
    end;
}

def 1 for_actor(2)
{
    switch(sector())
    {
        case 0:
            SetAnimation(1046);
            WaitAnimation();
            Lock(1);
            break;
        case 1:
            SetAnimation(2);
            break;
    }
    hold;
}

def 2 for_actor(0)
{
    switch(sector())
    {
        case 0:
            SetAnimation(2);
            Lock(0);
            break;
        case 1:
            SetAnimation(2);
            break;
        case 2:
            SetEffect(EFFECT_JOYOUS, 3);
            SetOutputAttribute(16);
            SetAnimation(1028);
            WaitLockPerformer(20, 0);
            Wait(20);
            SetDirection(DIR_UPRIGHT);
            Wait(60);
            SetDirection(DIR_UPLEFT);
            Wait(60);
            SetDirection(DIR_UP);
            Wait(60);
            Turn2DirectionTurn(2, 2, 5);
            Turn2DirectionTurn(2, 2, 5);
            CallCommon(CORO_JUMP_ANGRY_FUNC);
            SetAnimation(4);
            Lock(2);
            CallCommon(CORO_JUMP_HAPPY_FUNC);
            SetAnimation(31);
            WaitAnimation();
            SetAnimation(31);
            WaitAnimation();
            SetAnimation(31);
            WaitAnimation();
            SetAnimation(2);
            Turn2Direction(3, 2, DIR_DOWN);
            Move2PositionOffset(3, 0, 200);
            Destroy();
            break;
    }
    hold;
}


def 3 for_performer(0)
{
    camera_SetMyself();
    switch(sector())
    {
        case 0:
            Lock(19);
            break;
        case 1:
            Lock(19);
            bgm_PlayFadeIn(BGM_HIGH_PITCHED_WHISTLE, 40, 256);
            break;
        case 2:
            Lock(19);
            screen_FadeInAll(1, 60);
            Lock(20);
            screen_FadeOut(1, 45);
            break;
    }
    hold;
}


def 4 for_actor(105)
{
    switch(sector())
    {
        case 2:
            Lock(19);
            Wait(120);
            Move2PositionOffset(32919, 120, 0);
            SetDirection(DIR_UPRIGHT);
            Wait(60);
            SetEffect(EFFECT_QUESTION_MARK, 3);
            PursueTurnLives(0, 8, 0, 10);
            break;
    }
}

def 5 for_actor(107)
{
    SetAnimation(2);
    Wait(2);
    SetAnimation(4);
    Lock(19);
    Wait(80);
    SetDirection(DIR_RIGHT);
    SetAnimation(2);
    Wait(30);
    ~WaitUnlockLives(18, 104);
    Wait(30);
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
    Wait(90);
    SetAnimation(4);
    PursueTurnLives(0, 8, 0, 10);
    hold;
}


def 6 for_actor(104)
{
    SetAnimation(2);
    Wait(6);
    SetAnimation(4);
    Lock(18);
    SetAnimation(2);
    SetEffect(EFFECT_TWO_ARROWS_AT_SIDE_LEFT, 3);
    WaitEffect();
    SetDirection(DIR_LEFT);
    Wait(64);
    CallCommon(CORO_JUMP_HAPPY_FUNC);
    Wait(42);
    SetAnimation(4);
    PursueTurnLives(0, 8, 0, 10);
    hold;
}

def 7 for_actor(106)
{
    SetAnimation(4);
    hold;
}

def 8 for_performer(1)
{
    Lock(13);
    screen2_FadeOut(1, 90);
    Lock(0);
    hold;
}






