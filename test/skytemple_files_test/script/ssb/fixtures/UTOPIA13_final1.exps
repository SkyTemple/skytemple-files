macro WaitUnlockLives($lock, $actor)
{
    WaitLockLives($lock, $actor);
    Unlock($lock);
}

macro WaitUnlockObject($lock, $object)
{
    WaitLockObject($lock, $object);
    Unlock($lock);
}

macro WaitUnlockPerformer($lock, $performer)
{
    WaitLockObject($lock, $performer);
    Unlock($lock);
}

macro WaitUnlockMain()
{
    WaitLockSupervision(20);
    Unlock(20);
}

macro shake($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        Slide2PositionOffset(1, -1, 0);
        Wait(2);
        Slide2PositionOffset(1, 1, 0);
        Wait(2);
    }
}

macro spotlight($x, $y, $size, $speed)
{
    supervision_SpecialActing(27, 0, 0);
    supervision_SpecialActing(28, $x, $y);
    supervision_SpecialActing(29, $size, 0);
    supervision_SpecialActing(30, $speed, 0);
}

macro camera_shake($time, $arg0, $arg1, $arg3)
{
    camera_SetEffect($arg0, $arg1, $arg3);
    Wait($time);
    camera_SetEffect(0, 0, 0);
}

macro amber_hop_once()
{
    SetAnimation(5);
    Wait(23);
    SetAnimation(2);
}

macro amber_hop_se($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        se_PlayVolume(257, 128);
        Wait(23);
    }
}

macro nod()
{
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
}

macro dungeon_talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro dungeon_talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro echo_se($se_id)
{
    Wait(60);
    se_PlayVolume($se_id, 192);
    WaitSe($se_id);
    Wait(60);
    se_PlayVolume($se_id, 128);
    WaitSe($se_id);
    Wait(90);
}


// More general-purpose ones


macro talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_KeyWait();
}

macro monologue($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_KeyWait();
}

macro talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro monologue_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro talk_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_CloseEnforce();
}

macro monologue_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_CloseEnforce();
}


macro with_sweat_medium_wait($actor)
{
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_medium($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
}

macro tr_sweat_medium_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    WaitEffect();
}

macro tr_sweat_medium()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
}

macro with_sweat_small_wait($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_small($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
}

macro tr_sweat_small_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    WaitEffect();
}

macro tr_sweat_small()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
}

macro with_sweat_single_wait($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_single($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
}

macro tr_sweat_single_wait()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
    WaitEffect();
}

macro tr_sweat_single()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
}

macro with_shock_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_shock_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_shock()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_shock_m_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock_m($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_shock_m_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_shock_m()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_vshock_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_vshock_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_vshock()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_vshock_m_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock_m($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_vshock_m_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_vshock_m()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_question($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
}

macro with_question_wait($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
    with(actor $actor)
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro tr_question()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
}

macro tr_question_wait()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
    WaitEffect();
}
    



macro machine_talk($string)
{
    message_EmptyActor();
    message_Talk($string);
    message_KeyWait();
}

macro machine_talk_close($string)
{
    message_EmptyActor();
    message_Talk($string);
    message_Close();
}

macro machine($string)
{
    message_Mail($string);
    message_KeyWait();
}

macro machine_close($string)
{
    message_Mail($string);
    message_Close();
}

macro machine_format()
{
    Wait(403); // was originally the custom opcode SetTextboxAttribute(1, 0x2, 0x1D, 0x8, 0x1, 0xFA);
}

macro final_format()
{
    Wait(403); // was originally the custom opcode SetTextboxAttribute(1, 0x2, 0x1D, 0x5, 0x0, 0xFA);
}

macro final_talk($string)
{
    ~WaitUnlockLives(1, 2);
    message_EmptyActor();
    message_Talk($string);
    message_KeyWait();
}


macro final_talk_close($string)
{
    ~WaitUnlockLives(1, 2);
    message_EmptyActor();
    message_Talk($string);
    message_Close();
}

def 0
{
    debug_Print("In which Smeargle makes her last stand.");
    back_SetGround(76);
    supervision_Acting(0);
    WaitLockLives(1, 2);
    ~WaitUnlockPerformer(0, 0);
    bgm_PlayFadeIn(BGM_HEAVY_WIND6, 420, 128);
    bgm2_PlayFadeIn(BGM_STORM, 420, 64);
    screen_FadeIn(1, 420);
    WaitLockPerformer(2, 0);
    Wait(120);
    screen2_FadeIn(1, 0);
    Wait(120);
    ~machine_format();
    ~machine("[VS:1:3]You have quite a penchant for ignorance.[VR]");
    ~machine_close("[VS:1:3]Did I not just say you could not\nescape this world?[VR]");
    Wait(80);
    ~final_format();
    ~final_talk("[VS:1:2]You did.[VR][K] And I know you're right.[VR]");
    ~final_talk_close("But I'm not running.[K] I'm staying right here.[K][VS:1:2]\nForever.[VR]");
    Wait(10);
    bgm2_ChangeVolume(90, 96);
    bgm_ChangeVolume(90, 96);
    Wait(110);
    ~machine_format();
    ~machine("And what of your duty?");
    ~machine("All the [CS:K]Dolls[CR] in this world...[K]\nThey will wonder where you have gone...");
    ~machine_close("And without you,[W:10] should any of them\nbecome disillusioned like [partner] did...[C][VS:1:2]The empire you have built will fall\nand haunt you forever.[VR]");
    Wait(30);
    ~final_format();
    ~final_talk_close("Then they'll remember what it's like to live.");
    Wait(5);
    bgm2_ChangeVolume(60, 64);
    bgm_ChangeVolume(60, 128);
    Wait(70);
    ~machine_format();
    ~machine_close("Do you not wish to see any of them again?[K]\nDid you not say you could\nnot live in isolation?");
    Wait(20);
    ~final_format();
    WaitLockPerformer(2, 0);
    ~final_talk_close("This[W:10][U:2] ISN'T[W:20] living.[K] It never was.");
    Wait(10);
    ~machine_format();
    ~machine("I see no reason why you can't start now.");
    ~machine_close("Just go home.[K] Be with those you love.[K][VS:1:2]\nYour family.[K][VS:1:3]\nYour friends.[K][VS:1:4]\nYourself.[VR]");
    Wait(30);
    bgm2_ChangeVolume(60, 96);
    bgm_ChangeVolume(60, 96);
    Wait(70);
    ~final_format();
    ~final_talk_close("None of them have the kind of love I need.");
    Wait(10);
    ~machine_format();
    ~machine_close("Then what DO[W:10] you need?");
    Wait(10);
    ~final_format();
    ~final_talk_close("[VS:1:3]I don't know.[VS:1:2][K] But it's not this.[K]\nI know that much.[VR]");
    Wait(30);
    bgm2_FadeOut(120);
    bgm_ChangeVolume(120, 256);
    Wait(90);
    ~WaitUnlockPerformer(4, 0);
    Wait(40);
    WaitLockPerformer(6, 0);
    ~machine_format();
    ~machine("So be it.[K][U:6][VS:1:2] You know yourself best.[VR]");
    ~machine_close("I will find a way to save you.[K]\nAs you have saved many others.");
    screen2_FadeOut(1, 90);
    Wait(60);
    ~final_format();
    message_Mail("[VS:1:3](Save...)[VR]");
    message_Close();
    Wait(60);
    message_Mail("[VS:1:5](I shouldn't have ever saved anyone.)[VR]");
    message_Close();
    end;
}

def 1 for_actor(2)
{
    SetAnimation(1046);
    forever
    {
        Lock(1);
        SetAnimation(790);
        WaitAnimation();
        continue;
    }
    hold;
}

def 2 for_performer(0)
{
    camera_SetMyself();
    SetPositionOffset(0, -174);
    Lock(0);
    Move2PositionOffset(32850, 0, 174);
    Lock(2);
    ~camera_shake(10, 2, 2, 2);
    Lock(4);
    camera2_Move2PositionMark(32862, Position<'eye5', 1, 166.5>);
    WaitMoveCamera2();
    Lock(6);
    camera2_SetPositionMark(Position<'eye4', 1, 124.5>);
    Wait(4);
    camera2_SetPositionMark(Position<'eye3', 1, 97.5>);
    Wait(4);
    camera2_SetPositionMark(Position<'eye2', 1, 70.5>);
    Wait(5);
    camera2_SetPositionMark(Position<'eye1', 1, 43.5>);
    Wait(6);
    camera2_SetPositionMark(Position<'eye0', 1, 16.5>);
    Lock(8);
    hold;
}