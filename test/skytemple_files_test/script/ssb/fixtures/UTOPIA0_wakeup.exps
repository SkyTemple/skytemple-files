macro WaitUnlockLives($lock, $actor)
{
    WaitLockLives($lock, $actor);
    Unlock($lock);
}

macro WaitUnlockObject($lock, $object)
{
    WaitLockObject($lock, $object);
    Unlock($lock);
}

macro WaitUnlockPerformer($lock, $performer)
{
    WaitLockObject($lock, $performer);
    Unlock($lock);
}

macro WaitUnlockMain()
{
    WaitLockSupervision(20);
    Unlock(20);
}

macro shake($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        Slide2PositionOffset(1, -1, 0);
        Wait(2);
        Slide2PositionOffset(1, 1, 0);
        Wait(2);
    }
}

macro spotlight($x, $y, $size, $speed)
{
    supervision_SpecialActing(27, 0, 0);
    supervision_SpecialActing(28, $x, $y);
    supervision_SpecialActing(29, $size, 0);
    supervision_SpecialActing(30, $speed, 0);
}

macro camera_shake($time, $arg0, $arg1, $arg3)
{
    camera_SetEffect($arg0, $arg1, $arg3);
    Wait($time);
    camera_SetEffect(0, 0, 0);
}

macro amber_hop_once()
{
    SetAnimation(5);
    Wait(23);
    SetAnimation(2);
}

macro amber_hop_se($duration)
{
    for($LOCAL0 = 0; $LOCAL0 < $duration; $LOCAL0+=1;)
    {
        se_PlayVolume(257, 128);
        Wait(23);
    }
}

macro nod()
{
    SetAnimation(31);
    WaitAnimation();
    SetAnimation(2);
}

macro dungeon_talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro dungeon_talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2, $s3, $s4)
{
    switch($DUNGEON_ENTER)
    {
        case 2:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s2);
            break;
        case 3:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s3);
            break;
        case 4:
            ~talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $s4);
    }
}

macro echo_se($se_id)
{
    Wait(60);
    se_PlayVolume($se_id, 192);
    WaitSe($se_id);
    Wait(60);
    se_PlayVolume($se_id, 128);
    WaitSe($se_id);
    Wait(90);
}


// More general-purpose ones


macro talk($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_KeyWait();
}

macro monologue($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_KeyWait();
}

macro talk_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro monologue_close($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
}

macro talk_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Talk($string);
    message_CloseEnforce();
}

macro monologue_interrupted($actor, $face_type, $face_pos, $offset_x, $offset_y, $string)
{
    message_SetFaceEmpty($actor, $face_type, $face_pos);
    message_FacePositionOffset($offset_x, $offset_y);
    message_Monologue($string);
    message_CloseEnforce();
}


macro with_sweat_medium_wait($actor)
{
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_medium($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    }
}

macro tr_sweat_medium_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
    WaitEffect();
}

macro tr_sweat_medium()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_MEDIUM, 3);
}

macro with_sweat_small_wait($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_small($actor)
{
    se_Play(8972);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    }
}

macro tr_sweat_small_wait()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
    WaitEffect();
}

macro tr_sweat_small()
{
    se_Play(8972);
    SetEffect(EFFECT_SWEAT_DROPS_FROM_BOTH_SIDES_SMALL, 3);
}

macro with_sweat_single_wait($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_sweat_single($actor)
{
    se_Play(8961);
    with(actor $actor)
    {
        SetEffect(EFFECT_SWEAT_DROP, 3);
    }
}

macro tr_sweat_single_wait()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
    WaitEffect();
}

macro tr_sweat_single()
{
    se_Play(8961);
    SetEffect(EFFECT_SWEAT_DROP, 3);
}

macro with_shock_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_shock_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_shock()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_shock_m_wait($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_shock_m($actor)
{
    se_Play(8968);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_shock_m_wait()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_shock_m()
{
    se_Play(8968);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_vshock_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED, 3);
    }
}

macro tr_vshock_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
    WaitEffect();
}

macro tr_vshock()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED, 3);
}

macro with_vshock_m_wait($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
    with (actor $actor) 
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro with_vshock_m($actor)
{
    se_Play(8969);
    with(actor $actor)
    {
        SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    }
}

macro tr_vshock_m_wait()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
    WaitEffect();
}

macro tr_vshock_m()
{
    se_Play(8969);
    SetEffect(EFFECT_SHOCKED_MIRRORED, 3);
}

macro with_question($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
}

macro with_question_wait($actor)
{
    se_Play(8962);
    with(actor $actor)
    {
        SetEffect(EFFECT_QUESTION_MARK, 3);
    }
    with(actor $actor)
    {
        WaitEffect();
    }
    WaitExecuteLives($actor);
}

macro tr_question()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
}

macro tr_question_wait()
{
    se_Play(8962);
    SetEffect(EFFECT_QUESTION_MARK, 3);
    WaitEffect();
}
    



def 0
{
    debug_Print("In which the hunt is on.");
    $EVENT_LOCAL = 0;
    CallCommon(CORO_FADE_OUT_ALL_BEFORE);
    back_SetGround(9);
    supervision_Acting(0);
    CallCommon(CORO_SUBSCREEN_INIT);
    CallCommon(CORO_TITLE_TEST);
    CallCommon(CORO_DEBUG_FLAG_SETTING_BIPPA);
    WaitLockLives(1, 2);
    WaitLockLives(0, 0);
    WaitLockPerformer(0, 0);
    screen_FadeInAll(1, 60);
    CallCommon(CORO_DEBUG_SCRIPT);
    ~talk_close(0, FACE_HAPPY, FACE_POS_STANDARD, 0, 1,
        "[VS:1:2]C'moooooooon![VR][K] Get UP[U:0][W:20] already!");
    Wait(80);
    ~WaitUnlockLives(1, 2);
    Lock(20);
    ~talk_close(2, FACE_PAIN, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "No.");
    WaitLockLives(2, 0);
    ~talk_close(0, FACE_HAPPY, FACE_POS_STANDARD, 0, 1,
        "Why do you still [U:2]SLEEP[W:10] here anyway?[K]\nWe have tents in the town, you know!");
    ~talk_interrupted(2, FACE_PAIN, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "Tents that no one ever USE.[W:20]");
    ~WaitUnlockLives(4, 0);
    ~talk_interrupted(0, FACE_JOYOUS, FACE_POS_STANDARD, 0, 1,
        "Yeah,[W:20] my point [VS:1:3]exaaaaactly![VR][K]\nAll available for you to u--[W:5]");
    ~WaitUnlockLives(3, 2);
    ~talk(2, FACE_PAIN, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "My POINT[W:15] was that you all literally can't sleep.[K]\nThus,[W:20] you literally can't be quiet.");
    ~talk_close(2, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "Want me to list the other reasons?");
    ~WaitUnlockLives(6, 0);
    ~talk_interrupted(0, FACE_NORMAL, FACE_POS_STANDARD, 0, 1,
        "Ah--[W:20][FACE:17]no[W:10] thank[W:10] you.[W:15]");
    WaitLockLives(8, 0);
    WaitLockPerformer(10, 0);
    ~WaitUnlockLives(5, 2);
    message_SetWaitMode(0, 0);
    bgm_PlayFadeIn(BGM_HEARTWARMING, 420, 192);
    ~talk(2, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "[VS:2:1][BS]1.[BR] It's much much darker here,[W:10] which is way\nless of a distraction than the blinding light\nthat comes from who-knows-where in town.");
    message_Talk("[BS]2.[BR] As previously mentioned, everyone in town\nis absolutely, ridiculously loud, a fact that's\nonly compounded by the fact that the tents");
    message_Talk("have paper-thin walls,[W:10] which isn't only bad\nfor sound design,[W:10] but remember that one time\nwhere you all partied over the millionth [CS:K]Doll[CR]");
    message_Talk("was converted?[U:8][W:15] Ooh yeah I bet you do,[W:10] I can't\nsee your face but I bet you're cringing just\nthinking about how everything was on fire");
    message_Talk("and although nobody got hurt because well\ny'know it's literally impossible when you're not\nin a [CS:P]Remember Place[CR],[W:10] rebuilding it all SUCKED!");
    message_Talk("[BS]3.[BR] I'm very petty and actually can't think of\nany more reasons,[W:10] so I'm just gonna keep on\nsaying stuff until you do the thing where you[VR]");
    message_CloseEnforce();
    message_SetWaitMode(-1, -1);
    ~WaitUnlockLives(10, 0);
    ~talk_close(0, FACE_JOYOUS, FACE_POS_STANDARD, 0, 1,
        "Lalalalalala...! ♪[K][VS:1:3] I'm not listeniiiing![VR]");
    ~talk_close(2, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "[VS:1:5]Haha[VR][W:20][FACE:2]--cough--[W:30][FACE:1][VS:1:2]okay, okay...![K]\nY-[W:5]you've made your point...![K] Get off...![VR]");
    Wait(60);
    $EVENT_LOCAL = 1;
    Wait(75);
    ~WaitUnlockLives(7, 2);
    Lock(20);
    message_SetWaitMode(0, 0);
    ~talk(2, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEOUTW, 0, 1,
        "[VS:1:2]Alright,[VR]");
    Lock(20);
    message_SetWaitMode(-1, -1);
    ~talk_close(2, FACE_NORMAL, FACE_POS_STANDARD, 0, 1,
        "[U:1][STS]Alright,[STE] alright![K] I'm up!");
    ~talk_close(0, FACE_DIZZY, FACE_POS_BOTTOM_R_FACEINW, 0, 1,
        "[VS:1:3]H-[W:5]hooray...[VR]");
    Wait(50);
    supervision_Acting(1);
    Lock(20);
    ~talk_close(0, FACE_NORMAL, FACE_POS_BOTTOM_R_FACEINW, 0, 1,
        "Well,[W:20] ready for another adventure?");
    ~WaitUnlockLives(3, 2);
    Lock(20);
    ~talk(2, FACE_STUNNED, FACE_POS_STANDARD, 0, 1,
        "[VS:1:2]Wait,[W:20] now...?[VR][K] Does that mean...");
    ~talk_close(2, FACE_WORRIED, FACE_POS_STANDARD, 0, 1,
        "You've finally found out who the last\nthree Pokémon are...?");
    ~WaitUnlockLives(0, 0);
    ~talk(0, FACE_NORMAL, FACE_POS_BOTTOM_R_FACEINW, 0, 1,
        "Ab-[W:15]so-[W:15]lutely[W:20][VS:2:3] NOT! ♪[VR][K]\nBut I got a hunch we'll know soon!");
    ~talk(0, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEINW, 0, 1,
        "I've asked a bunch of the townsfolk to try\nand remember [VS:1:3]reaaaaally[VR] hard about what\nlife was like before being a [CS:K]Doll[CR]!");
    WaitLockLives(2, 0);
    message_Talk("You know,[W:20] since Pokémon love to travel in\ngroups or whatever?[K][U:2] I'm sure someone's\nbound to know something or other!");
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
    WaitLockLives(5, 2);
    ~talk(2, FACE_SAD, FACE_POS_STANDARD, 0, 1,
        "No offense to the townsfolk,[W:20] but...[K][U:5]\nI really think you're putting\ntoo much faith in them.");
    message_KeyWait();
    WaitLockPerformer(19, 0);
    message_Talk("It's like everyone there is lost in their own\nlittle world or something...[K][U:19][VS:1:2]I can barely hold\na meaningful conversation with any of them...[VR]");
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
    ~WaitUnlockLives(4, 0);
    WaitLockLives(6, 0);
    ~talk(0, FACE_HAPPY, FACE_POS_BOTTOM_R_FACEINW, 0, 1,
        "Well,[W:20] [BS]I[BR][U:6][W:10] don't feel like bruteforcing every\npossible species at the [CS:P]Hollow[CR]!");
    ~WaitUnlockLives(8, 0);
    message_Talk("No more being lazy![W:10] We're finally finishing\nwhat we started,[W:20] alright?");
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
    Wait(30);
    ~WaitUnlockLives(7, 2);
    WaitLockLives(9, 2);
    ~talk(2, FACE_NORMAL, FACE_POS_STANDARD, 0, 1,
        "Alright...[K]yeah.[C]Let's get going.");
    bgm_FadeOut(60);
    ~monologue(2, FACE_NORMAL, FACE_POS_STANDARD, 0, 1,
        "(To finish...[K][FACE:1][U:9][VS:1:2]what I started...)[VR]");
    message_Monologue("[VS:1:10](...)[VR]");
    message_Close();
    WaitLockLives(11, 2);
    CallCommon(CORO_DEBUG_SCENE);
    CallCommon(CORO_DEBUG_FLAG_SETTING_PUPURIN);
    Wait(30);
    me_Play(7);
    message_Mail("[CN]Happiness Quick Tip");
    WaitMe(7);
    message_Mail("[CN]You can save in [CS:P]Paradise[CR] at\n[CN]any time by pressing [M:B7].");
    message_Close();
    end;
}

def 1 for_actor(2)
{
    SetOutputAttribute(6);
    SetAnimation(1046);
    WaitAnimation();
    Lock(1);
    for($LOCAL0 = 0; $LOCAL0 < 10; $LOCAL0+=1;)
    {
        Slide2PositionOffset(1, -1, 0);
        Wait(4);
        Slide2PositionOffset(1, 1, 0);
        Wait(4);
    }
    Wait(60);
    ~WaitUnlockMain();
    MoveHeight(2, 7);
    Wait(1);
    MoveHeight(2, 0);
    Lock(3);
    SetAnimation(810);
    Wait(20);
    StopAnimation();
    Lock(5);
    SetAnimation(1066);
    Lock(7);
    ~shake(10);
    Wait(20);
    ~WaitUnlockMain();
    Wait(15);
    SetAnimation(23);
    Wait(10);
    screen_WhiteOutAll(1, 4);
    with(actor 0)
    {
        SetAnimation(11);
    }
    with(actor 0)
    {
        SetDirection(DIR_LEFT);
    }
    camera_SetEffect(0, 0, 0);
    with(actor 0)
    {
        SetPositionMark(Position<'pain', 31, 26>);
    }
    with(actor 0)
    {
        SetHeight(0);
    }
    with(actor 0)
    {
        SetEffect(EFFECT_NONE, 3);
    }
    with(actor 0)
    {
        SetOutputAttribute(256);
    }
    ~WaitUnlockMain();
    Lock(1);
    with(actor 0)
    {
        SetAnimation(28);
    }
    with(actor 0)
    {
        Slide2PositionOffset(3, 16, 16);
    }
    se_Play(5121);
    screen_FadeInAll(0, 4);
    WaitAnimation();
    camera_SetEffect(2, 2, 2);
    SetAnimation(13);
    WaitAnimation();
    SetAnimation(770);
    camera_SetEffect(0, 0, 0);
    Lock(3);
    ~tr_question_wait();
    ~WaitUnlockMain();
    SetDirection(DIR_UPRIGHT);
    bgm_ChangeVolume(60, 128);
    Wait(30);
    SetDirection(DIR_RIGHT);
    Lock(5);
    ~tr_sweat_medium();
    CallCommon(CORO_HEAD_SHAKE_FUNC);
    Lock(7);
    CallCommon(CORO_JUMP_HAPPY_FUNC);
    Lock(9);
    Turn2Direction(9, 10, DIR_DOWN);
    Lock(11);
    hold;
}

def 2 for_actor(0)
{
    switch(sector())
    {
        case 0:
    SetOutputAttribute(12);
    SetEffect(EFFECT_JOYOUS, 3);
    SetAnimation(1029);
    Lock(0);
    SetEffect(EFFECT_NONE, 3);
    se_Play(8974);
    CallCommon(CORO_JUMP_HAPPY_FUNC);
    SetAnimation(770);
    Lock(2);
    CallCommon(CORO_HEAD_SHAKE_FUNC);
    Lock(4);
    SetEffect(EFFECT_LAUGHING, 3);
    Turn2DirectionTurn(3, 1, 5);
    Turn2DirectionTurn(3, 1, 5);
    Turn2DirectionTurn(3, 1, 5);
    Turn2DirectionTurn(3, 1, 5);
    ~amber_hop_once();
    Lock(6);
    SetEffect(EFFECT_NONE, 3);
    Wait(1);
    se_Play(8965);
    SetEffect(EFFECT_EXCLAMATION_MARK, 3);
    WaitEffect();
    Turn2DirectionTurn(6, 1, 1);
    Wait(10);
    Turn2DirectionTurn(6, 2, 4);
    Wait(10);
    Turn2Direction(6, 1, DIR_RIGHT);
    Lock(8);
    SetDirection(DIR_UPRIGHT);
    Wait(10);
    ~tr_sweat_single_wait();
    Wait(10);
    SetDirection(DIR_RIGHT);
    Wait(20);
    ~shake(4);
    Wait(23);
    Slide2PositionOffset(1, 4, 0);
    Wait(30);
    Slide2PositionOffset(2, 4, 0);
    Wait(5);
    ~shake(9);
    Lock(10);
    SetEffect(EFFECT_LAUGHING, 3);
    se_Play(545);
    SetAnimation(529);
    Slide2PositionLives(2, 2);
    WaitAnimation();
    SetAnimation(770);
    with(performer 3)
    {
        SetOutputAttribute(2);
    }
    bgm_ChangeVolume(30, 256);
    ResetOutputAttribute(256);
    while($EVENT_LOCAL < 2)
    {
        se_Play(257);
        if($EVENT_LOCAL == 0)
        {
            MoveHeight(3, 10);
            Wait(2);
        }
        else
        {
            MoveHeight(6, 12);
        }
        Turn2DirectionTurn(1, 1, 1);
        with(performer 3)
        {
            SetEffect(EFFECT_NONE, 3);
        }
        if($EVENT_LOCAL == 0)
        {
            MoveHeight(4, 0);
        }
        else
        {
            MoveHeight(8, 0);
        }
        se_Play(2066);
        if($EVENT_LOCAL == 0)
        {
            camera_SetEffect(2, 2, 2);
        }
        else
        {
            camera_SetEffect(2, 1, 1);
        }
        if($EVENT_LOCAL == 0)
        {
            with(performer 3)
            {
                SetEffect(EFFECT_SMOKE_PUFF_SMALL, 3);
            }
        }
        else
        {
            with(performer 3)
            {
                SetEffect(EFFECT_SMOKE_PUFF, 3);
            }
        }
        Wait(7);
        camera_SetEffect(0, 0, 0);
    }
        break;
    case 1:
        ~shake(12);
        SetAnimation(770);
        SetDirection(DIR_DOWN);
        Wait(1);
        ~amber_hop_once();
        Wait(30);
        ~WaitUnlockMain();
        Turn2DirectionLives(4, 10, 2);
        Wait(20);
        SetAnimation(31);
        WaitAnimation();
        SetAnimation(2);
        Lock(0);
        ResetOutputAttribute(12);
        se_Play(9219);
        SetDirection(DIR_UPLEFT);
        Wait(16);
        se_Play(9220);
        SetDirection(DIR_DOWNLEFT);
        Wait(17);
        SetDirection(DIR_RIGHT);
        se_Play(9221);
        Wait(26);
        WaitLockPerformer(19, 0);
        Unlock(19);
        se_Stop(9221);
        se_Play(16131);
        SetDirection(DIR_LEFT);
        CallCommon(CORO_JUMP_HAPPY_FUNC);
        Lock(2);
        SetAnimation(31);
        WaitAnimation();
        SetAnimation(2);
        SetAnimation(31);
        WaitAnimation();
        SetAnimation(2);
        Lock(4);
        se_Play(8975);
        CallCommon(CORO_JUMP_ANGRY_FUNC);
        Lock(6);
        CallCommon(CORO_HEAD_SHAKE_FUNC);
        Lock(8);
        Turn2DirectionTurn(2, 1, 5);
        Turn2DirectionTurn(2, 1, 5);
        Turn2DirectionTurn(2, 1, 5);
        Turn2DirectionTurn(2, 1, 5);
        Turn2DirectionTurn(4, 1, 5);
        Turn2DirectionTurn(8, 1, 5);
        ~amber_hop_once();
        Lock(10);
        break;
    }
    hold;
}

def 3 for_performer(0)
{
    camera_SetMyself();
    Lock(0);
    ~camera_shake(10, 2, 2, 2);
    Lock(10);
    screen_WhiteOutAll(0, 2);
    camera_SetEffect(2, 2, 32772);
    Move2PositionLives(4, 2);
    screen_FadeInAll(0, 2);
    Wait(8);
    camera_SetEffect(0, 0, 0);
    Lock(19);
    ~camera_shake(10, 2, 2, 2);
    Lock(19);
    bgm_ChangeVolume(60, 64);
    hold;
}